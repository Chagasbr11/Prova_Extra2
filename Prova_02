package br.edu.univas;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

class Veiculo {
    private final String marca;
    private final int anoFabricacao;
    private final String modelo;
    private final int potencia;

    public Veiculo(String marca, int anoFabricacao, String modelo, int potencia) {
        this.marca = marca;
        this.anoFabricacao = anoFabricacao;
        this.modelo = modelo;
        this.potencia = potencia;
    }

    public String getMarca() {
        return marca;
    }

    public int getAnoFabricacao() {
        return anoFabricacao;
    }

    public String getModelo() {
        return modelo;
    }

    public int getPotencia() {
        return potencia;
    }
}

class Carro extends Veiculo {

    public Carro(String marca, int anoFabricacao, String modelo, int potencia) {
        super(marca, anoFabricacao, modelo, potencia);
    }

}

class Caminhao extends Veiculo {

    public Caminhao(String marca, int anoFabricacao, String modelo, int potencia) {
        super(marca, anoFabricacao, modelo, potencia);
    }

}

class SistemaControleVeiculos {
    private final List<Veiculo> veiculos;

    public SistemaControleVeiculos() {
        veiculos = new ArrayList<>();
    }

    public void cadastrarVeiculo(Veiculo veiculo) {
        veiculos.add(veiculo);
    }

    public void listarVeiculos() {
        if (veiculos.isEmpty()) {
            System.out.println("Nenhum veículo cadastrado.");
        } else {
            System.out.println("Lista de veículos cadastrados:");
            for (Veiculo veiculo : veiculos) {
                System.out.println("Marca: " + veiculo.getMarca() + ", Ano de Fabricação: " + veiculo.getAnoFabricacao()
                        + ", Modelo: " + veiculo.getModelo() + ", Potência: " + veiculo.getPotencia());
            }
        }
    }

    public void listarVeiculosPorAno(int ano) {
        boolean encontrado = false;
        System.out.println("Lista de veículos cadastrados no ano de " + ano + ":");
        for (Veiculo veiculo : veiculos) {
            if (veiculo.getAnoFabricacao() == ano) {
                System.out.println("Marca: " + veiculo.getMarca() + ", Ano de Fabricação: " + veiculo.getAnoFabricacao()
                        + ", Modelo: " + veiculo.getModelo() + ", Potência: " + veiculo.getPotencia());
                encontrado = true;
            }
        }
        if (!encontrado) {
            System.out.println("Nenhum veículo cadastrado no ano de " + ano + ".");
        }
    }

    public void quantidadeVeiculosPorMarca() {
        Map<String, Integer> quantidadePorMarca = new HashMap<>();
        for (Veiculo veiculo : veiculos) {
            String marca = veiculo.getMarca();
            quantidadePorMarca.put(marca, quantidadePorMarca.getOrDefault(marca, 0) + 1);
        }

        System.out.println("Quantidade de veículos por marca:");
        for (Map.Entry<String, Integer> entry : quantidadePorMarca.entrySet()) {
            System.out.println("Marca: " + entry.getKey() + ", Quantidade: " + entry.getValue());
        }
    }
}

class Main {
    public static void main(String[] args) {
        SistemaControleVeiculos sistema = new SistemaControleVeiculos();
        Scanner scanner = new Scanner(System.in);

        int opcao;
        do {
            System.out.println("\n==== Sistema de Controle de Veículos ====");
            System.out.println("1. Cadastrar veículo");
            System.out.println("2. Listar veículos cadastrados");
            System.out.println("3. Listar veículos por ano de fabricação");
            System.out.println("4. Quantidade de veículos por marca");
            System.out.println("0. Sair");
            System.out.print("Escolha uma opção: ");
            opcao = scanner.nextInt();

            switch (opcao) {
                case 1 -> cadastrarVeiculo(sistema, scanner);
                case 2 -> sistema.listarVeiculos();
                case 3 -> listarVeiculosPorAno(sistema, scanner);
                case 4 -> sistema.quantidadeVeiculosPorMarca();
                case 0 -> System.out.println("Saindo do sistema...");
                default -> System.out.println("Opção inválida. Tente novamente.");
            }
        } while (opcao != 0);

        scanner.close();
    }

    public static void cadastrarVeiculo(SistemaControleVeiculos sistema, Scanner scanner) {
        System.out.println("\n==== Cadastro de Veículo ====");
        System.out.print("Marca: ");
        String marca = scanner.next();
        System.out.print("Ano de Fabricação: ");
        int anoFabricacao = scanner.nextInt();
        System.out.print("Modelo: ");
        String modelo = scanner.next();
        System.out.print("Potência: ");
        int potencia = scanner.nextInt();

        System.out.println("Selecione o tipo de veículo:");
        System.out.println("1. Carro");
        System.out.println("2. Caminhão");
        System.out.print("Opção: ");
        int tipoVeiculo = scanner.nextInt();

        if (tipoVeiculo == 1) {
            System.out.print("Tração (Traseira/Dianteira): ");
            System.out.print("Quantidade de Portas: ");
            scanner.nextInt();
            Carro carro = new Carro(marca, anoFabricacao, modelo, potencia);
            sistema.cadastrarVeiculo(carro);
        } else if (tipoVeiculo == 2) {
            System.out.print("Capacidade de Carga: ");
            scanner.nextInt();
            Caminhao caminhao = new Caminhao(marca, anoFabricacao, modelo, potencia);
            sistema.cadastrarVeiculo(caminhao);
        } else {
            System.out.println("Opção inválida. Veículo não cadastrado.");
        }
    }

    public static void listarVeiculosPorAno(SistemaControleVeiculos sistema, Scanner scanner) {
        System.out.println("\n==== Listagem de Veículos por Ano de Fabricação ====");
        System.out.print("Ano de Fabricação: ");
        int ano = scanner.nextInt();
        sistema.listarVeiculosPorAno(ano);
    }
}
